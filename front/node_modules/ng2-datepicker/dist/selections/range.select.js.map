{"version":3,"sources":["src/selections/range.select.ts"],"names":[],"mappings":"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","file":"range.select.js","sourcesContent":["import { Directive, OnChanges, SimpleChanges, forwardRef } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { BaseSelect, isSameDay } from './base.select';\nimport { DateState } from '../models';\n\nexport interface RangeDate {\n  start: moment.Moment;\n  end: moment.Moment;\n}\n\nclass RangeDateImpl implements RangeDate {\n  private onChange = (v: RangeDate) => {};\n\n  private _start: moment.Moment;\n  get start() {\n    return this._start;\n  }\n  set start(date: moment.Moment) {\n    this._start = date;\n\n    this.onChange(this);\n  }\n\n  private _end: moment.Moment;\n  get end() {\n    return this._end;\n  }\n  set end(date: moment.Moment) {\n    this._end = date;\n\n    this.onChange(this);\n  }\n\n  constructor(rangeDate: RangeDate, onchange: (v: RangeDate) => void) {\n    this.start = rangeDate.start;\n    this.end = rangeDate.end;\n\n    this.onChange = onchange;\n  }\n}\n\n@Directive(BaseSelect.extendConfig({\n  selector: '[rangeSelect]'\n}, RangeSelectDirective))\nexport class RangeSelectDirective extends BaseSelect<RangeDate> implements OnChanges {\n\n  protected get EMPTY_VALUE(): RangeDate {\n    return {\n      start: null,\n      end: null\n    };\n  };\n\n  setValue(value: RangeDate) {\n    if ( value !== this.value) {\n      if ( !this.isDateValid(value.start) )\n        value.start = null;\n\n      if ( !this.isDateValid(value.end) )\n        value.end = null;\n\n      this.value = new RangeDateImpl(value, v => {\n        this.onDateChange.emit(v);\n        this.hasStateChanged = true;\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let start = this.value.start,\n       end = this.value.end;\n\n    if ( !this.isDateValid(this.value.start) )\n      start = null;\n\n    if ( !this.isDateValid(this.value.end) )\n      end = null;\n\n    if ( start !== this.value.start || end !== this.value.end )\n      this.value = {\n        start: start,\n        end: end\n      };\n  }\n\n  selectDate(date: moment.Moment): boolean {\n    if( !this.isDateSelectable(date) )\n      return false;\n\n    if(!this.value.start)\n      this.value.start = date;\n    else if(!this.value.end)\n      this.value.end = date;\n    else {\n      let diffStart = Math.abs(date.diff(this.value.start))\n      let diffEnd = Math.abs(date.diff(this.value.end))\n\n      if(diffStart < diffEnd)\n        this.value.start = date;\n      else\n        this.value.end = date;\n    }\n\n    return true;\n  }\n\n  unselectDate(date: moment.Moment): boolean {\n    if (date) {\n\n      if (isSameDay(date, this.value.start)){\n        this.value.start = null;\n        return true;\n      }\n\n      if(isSameDay(date, this.value.end)){\n        this.value.end = null;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isDateSelected(date: moment.Moment): boolean {\n    return date && (isSameDay(date, this.value.start) || isSameDay(date, this.value.end));\n  }\n\n  isDateInSelectRange(date: moment.Moment): boolean {\n    let start = this.value.start,\n        end = this.value.end;\n    return start && end &&\n         date.isSameOrAfter(start, 'd') &&\n         date.isSameOrBefore(end, 'd');\n  }\n}\n\n"]}