var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive } from '@angular/core';
import { BaseSelect, isSameDay } from './base.select';
export var SingleSelectDirective = (function (_super) {
    __extends(SingleSelectDirective, _super);
    function SingleSelectDirective() {
        _super.apply(this, arguments);
    }
    Object.defineProperty(SingleSelectDirective.prototype, "EMPTY_VALUE", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    ;
    SingleSelectDirective.prototype.setValue = function (value) {
        if (!value || this.isDateValid(value))
            this.value = value;
    };
    SingleSelectDirective.prototype.ngOnChanges = function (changes) {
        if (!this.isDateValid(this.value))
            this.value = null;
    };
    SingleSelectDirective.prototype.selectDate = function (date) {
        if (!this.isDateSelectable(date))
            return false;
        this.value = date;
        return true;
    };
    SingleSelectDirective.prototype.unselectDate = function (date) {
        if (this.isDateSelected(date)) {
            this.value = null;
            return true;
        }
        return false;
    };
    SingleSelectDirective.prototype.isDateSelected = function (date) {
        return isSameDay(date, this.value);
    };
    SingleSelectDirective.prototype.isDateInSelectRange = function (date) {
        return this.isDateSelected(date);
    };
    SingleSelectDirective = __decorate([
        Directive(BaseSelect.extendConfig({
            selector: '[singleSelect]'
        }, SingleSelectDirective)), 
        __metadata('design:paramtypes', [])
    ], SingleSelectDirective);
    return SingleSelectDirective;
}(BaseSelect));

//# sourceMappingURL=single.select.js.map
