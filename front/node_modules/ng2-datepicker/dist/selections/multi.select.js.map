{"version":3,"sources":["src/selections/multi.select.ts"],"names":[],"mappings":"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","file":"multi.select.js","sourcesContent":["import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { BaseSelect, isSameDay } from './base.select';\nimport { DateState } from '../models';\n\n@Directive(BaseSelect.extendConfig({\n  selector: '[multiSelect]'\n}, MultiSelectDirective))\nexport class MultiSelectDirective extends BaseSelect<moment.Moment[]> implements OnChanges {\n\n  protected get EMPTY_VALUE() {\n    return [];\n  }\n\n  private _limit = Infinity;\n\n  @Input('multiSelect')\n  get limit() {\n    return this._limit;\n  }\n\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  public setValue(dates: moment.Moment[]) {\n    if (dates != this.value) {\n      this.value = (dates || [])\n        .filter( d => this.isDateValid(d) )\n        //TODO TEST : be sure all js engine does not remove any element on\n        //  splice(0, -Infinity);\n        .splice(0, dates.length - this.limit)\n        .map( d => this.getDay(d) )\n        .sort( (a, b) => <any>a - <any>b );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let value = this.value;\n\n    if (changes['minDate'] || changes['maxDate']) {\n      let newValue = value.filter( d => this.isDateValid(d) );\n      if (newValue.length < value.length)\n        value = newValue;\n    }\n\n    if (changes['limit'] && value.length > this.limit)\n      value = value.slice(0, this.limit);\n\n    this.value = value;\n  }\n\n  selectDate(date: moment.Moment): boolean {\n    if( !this.isDateSelectable(date) )\n      return false;\n\n    if( this.value.length < this.limit )\n      this.value = [...this.value, date]\n        .sort( (a,b) => <any>a - <any>b);\n    else\n      this.value = [date];\n  }\n\n  unselectDate(date: moment.Moment): boolean {\n    let newValue = this.value.filter( d => !isSameDay(d, date) );\n    if (newValue.length < this.value.length) {\n      this.value = newValue;\n      return true;\n    }\n\n    return false;\n  }\n\n  isDateSelected(date: moment.Moment): boolean {\n    return !!this.value.find( d => isSameDay(d, date) );\n  }\n\n  isDateInSelectRange(date: moment.Moment): boolean {\n    return this.value.length > 1 &&\n          date.isBetween(this.value[0], this.value[this.value.length - 1], 'day', '[]');\n  }\n}\n"]}