var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Pipe } from '@angular/core';
import * as moment from 'moment';
export var MomentFormatPipe = (function () {
    function MomentFormatPipe() {
    }
    MomentFormatPipe.prototype.transform = function (date, format, locale) {
        //this short version cause trouble to typescript
        //let d = (date && date instanceof moment.Moment[]) ? date[0] : date
        if (format === void 0) { format = 'LL'; }
        var d;
        if (date && date instanceof Array)
            d = date[0];
        else
            d = date;
        if (!d)
            return '';
        if (locale) {
            d = moment(d);
            d.locale(locale);
        }
        return d.format(format);
    };
    MomentFormatPipe = __decorate([
        Pipe({
            name: 'momentFormat'
        }), 
        __metadata('design:paramtypes', [])
    ], MomentFormatPipe);
    return MomentFormatPipe;
}());

//# sourceMappingURL=momentformat.js.map
