var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { Component, ElementRef, Renderer, ChangeDetectorRef, Optional } from '@angular/core';
import * as moment from 'moment';
import { DatePickerTemplate } from '../datepicker.template';
import { BaseSelect } from '../../selections/base.select';
import { extendConfig } from '../../config_helpers';
export var DatePickerIonicComponent = (function (_super) {
    __extends(DatePickerIonicComponent, _super);
    function DatePickerIonicComponent(renderer, elRef, cd, select) {
        var _this = this;
        _super.call(this, cd, select);
        this._class = DatePickerIonicComponent.CONTAINER_CLASS;
        this._opened = false;
        /*@Input()*/ this.viewFormat = 'LL';
        this.el = elRef.nativeElement;
        renderer.listenGlobal('window', 'click', function (e) {
            if (_this.opened &&
                e.target &&
                _this.el !== e.target &&
                !_this.el.contains(e.target))
                _this.close();
        });
    }
    DatePickerIonicComponent.extendConfig = function (config, componentClass) {
        var a = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            a[_i - 2] = arguments[_i];
        }
        return extendConfig(_super.extendConfig.call(this, {
            template: "<div [class]=\"class\"> <input type=\"hidden\" [(ngModel)]=\"value\"> <div class=\"ui-kit-calendar-input\" [class.opened]=\"opened || expanded\" (click)=\"inputClick()\"> <span [class.opened]=\"opened || expanded\">{{ value | momentFormat: viewFormat:locale }}</span> <i class=\"ion-ios-calendar-outline\"></i> </div> <div class=\"ui-kit-calendar-cal-container\" [class.opened]=\"opened\"> <div class=\"ui-kit-calendar-cal-top\"> <i class=\"ion-arrow-left-b\" (click)=\"prevMonth()\"></i> <span>{{ month.date | momentFormat: 'MMMM YYYY':locale }}</span> <i class=\"ion-arrow-right-b\" (click)=\"nextMonth()\"></i> </div> <div class=\"ui-kit-calendar-day-names\"> <span *ngFor=\"let wd of weekDaysName\">{{ wdÂ }}</span> </div> <div class=\"ui-kit-calendar-days\"> <span *ngFor=\"let d of month.days\" (click)=\"onDateclick($event, d)\" [ngClass]=\"d | dayClasses\"> {{ d.date | momentFormat: 'D' }} </span> </div> </div> </div> ",
            styles: [".ui-kit-calendar-container { position: relative; width: 170px; margin: 0 10px 0 0; display: block; float: left; z-index: 99; position: relative; width: 170px; margin: 0 10px 0 0; display: block; float: left; z-index: 99; } .ui-kit-calendar-container .ui-kit-calendar-input { border: 1px solid #aec9de; border-radius: 10px; display: -ms-flexbox; display: flex; -ms-flex-pack: center; justify-content: center; -ms-flex-align: center; align-items: center; width: 70px; height: 40px; background: #fcfcff; cursor: pointer; text-align: center; font-size: 0; transition: all 300ms ease; } .ui-kit-calendar-container .ui-kit-calendar-input i { color: #505b71; font-size: 20px; } .ui-kit-calendar-container .ui-kit-calendar-input.opened { width: 170px; border: 1px solid #44c8f9; color: #44c8f9; background: rgba(68, 200, 249, 0.15); font-size: 12px; } .ui-kit-calendar-container .ui-kit-calendar-input.opened i { color: #44c8f9; } .ui-kit-calendar-container .ui-kit-calendar-input span { display: none; } .ui-kit-calendar-container .ui-kit-calendar-input span.opened { display: inline; margin-right: 10px; } .ui-kit-calendar-container .ui-kit-calendar-cal-container { position: absolute; top: 55px; right: 0; color: #fff; background: #44c8f9; display: inline-block; width: 300px; border-radius: 3px; visibility: hidden; opacity: 0; transition: visibility 0s, opacity 300ms linear 300ms; } .ui-kit-calendar-container .ui-kit-calendar-cal-container.opened { visibility: visible; opacity: 1; } .ui-kit-calendar-container .ui-kit-calendar-cal-container:after { position: absolute; top: -15px; right: 28px; content: \"\"; width: 0; height: 0; border-top: 15px solid transparent; border-bottom: 15px solid transparent; border-left: 15px solid #44c8f9; transform: rotate(-90deg); } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-cal-top { width: 100%; height: 40px; line-height: 40px; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-cal-top i { display: block; float: left; font-size: 16px; width: 40px; height: 40px; text-align: center; cursor: pointer; vertical-align: baseline; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-cal-top span { display: block; float: left; width: 220px; height: 40px; font-size: 14px; text-align: center; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-day-names { width: 100%; height: 23px; background: #35b1e2; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-day-names span { font-size: 10px; line-height: 23px; text-align: center; display: block; float: left; width: calc(100% / 7); height: 23px; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-days { width: 100%; padding: 5px 0; margin-bottom: 15px; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-days span { font-size: 12px; display: block; float: left; text-align: center; height: 40px; line-height: 40px; width: calc(100% / 7); cursor: pointer; border-radius: 50%; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-days span.today { border: 1px solid #fff; box-sizing: border-box; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-days span:not(.currDisplayMonth) { opacity: 0.5; pointer-events: none; } .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-days span.currDisplayMonth:hover, .ui-kit-calendar-container .ui-kit-calendar-cal-container .ui-kit-calendar-days span.selected { background: #fff; color: #44c8f9; } /*# sourceMappingURL=ionic.css.map */ "],
            inputs: ['class', 'expanded', 'opened', 'viewFormat']
        }, componentClass), config);
    };
    Object.defineProperty(DatePickerIonicComponent.prototype, "class", {
        /*@Input()*/
        get: function () {
            return this._class;
        },
        set: function (classStr) {
            this._class = DatePickerIonicComponent.CONTAINER_CLASS + ' ' + classStr;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerIonicComponent.prototype, "opened", {
        get: function () {
            return this._opened;
        },
        /*@Input()*/
        set: function (b) {
            if (this._opened !== b) {
                this._opened = b;
                this.cd.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    DatePickerIonicComponent.prototype.ngOnInit = function () {
        this.initMonths(moment());
    };
    DatePickerIonicComponent.prototype.onDateclick = function (e, day) {
        e.preventDefault();
        if (day.date.isSame(this.month.date, 'M')) {
            this.select.selectDate(day.date);
            this.close();
        }
    };
    DatePickerIonicComponent.prototype.nextMonth = function () {
        this.setMonth(this.month.date.add(1, 'M'));
    };
    DatePickerIonicComponent.prototype.prevMonth = function () {
        this.setMonth(this.month.date.subtract(1, 'M'));
    };
    DatePickerIonicComponent.prototype.toggle = function () {
        this.opened = !this.opened;
    };
    DatePickerIonicComponent.prototype.open = function () {
        this.opened = true;
    };
    DatePickerIonicComponent.prototype.close = function () {
        this.opened = false;
    };
    DatePickerIonicComponent.prototype.inputClick = function () {
        this.onTouchedCallback();
        this.toggle();
    };
    DatePickerIonicComponent.CONTAINER_CLASS = 'ui-kit-calendar-container';
    DatePickerIonicComponent = __decorate([
        Component(DatePickerIonicComponent.extendConfig({
            selector: 'datepicker-ionic'
        }, DatePickerIonicComponent)),
        __param(3, Optional()), 
        __metadata('design:paramtypes', [Renderer, ElementRef, ChangeDetectorRef, BaseSelect])
    ], DatePickerIonicComponent);
    return DatePickerIonicComponent;
}(DatePickerTemplate));

//# sourceMappingURL=datepickerionic.js.map
