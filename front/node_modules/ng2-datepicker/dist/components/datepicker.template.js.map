{"version":3,"sources":["src/components/datepicker.template.ts"],"names":[],"mappings":"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","file":"datepicker.template.js","sourcesContent":["import { Component, Input, SimpleChanges, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport * as moment from 'moment';\n\nimport { BaseSelect } from '../selections/base.select';\nimport { CalendarDay } from '../models';\nimport { extendConfig, formProvider } from '../config_helpers';\n\nexport interface Month {\n  date: moment.Moment;\n  days: CalendarDay[];\n}\n\nexport abstract class DatePickerTemplate<T extends BaseSelect<V>, V> implements ControlValueAccessor {\n\n   /**\n   * Extend the base configuration needed by @Component\n   * @param {Component} config           subclass configuration\n   * @param {any[]}     ...a             useless just to please compiler if subclass wants to add parameter\n   */\n  //TODO the ...a trick works to keep compiler quiet but this will be transpiled into unseless code\n  static extendConfig(config: Component, componentClass: Function, ...a: any[]) {\n    return extendConfig({\n      //we could auto-generate it using gulp or something\n      inputs: ['locale', 'showSixWeek'],\n      providers: [ formProvider(componentClass) ],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }, config);\n  }\n\n  private _locale: string | false;\n\n  /*@Input()*/ set locale(locale: (string | false)) {\n    this._locale = (!locale || locale.length == 0) ? false : locale;\n\n    //with global locale we can call weekdaysShort() with a boolean to get array in locale order\n    //unfortunately we can't for local locale, must do it ourselves.\n    let localeData = this.applyLocale( moment() ).localeData()\n    let weekdays = localeData.weekdaysShort();\n                                                           // typings not up to date\n    this.weekDaysName = weekdays.concat(weekdays.splice(0, (<any>localeData).firstDayOfWeek()))\n  }\n\n  get locale(): (string | false) {\n    return this._locale;\n  }\n\n\n  /*@Input()*/ showSixWeek = false;\n\n  protected weekDaysName = moment().localeData().weekdaysShort();\n  protected months: Month[] = [];\n\n  //helper\n  get month(): Month {\n    return this.months[0];\n  }\n\n  constructor( protected cd: ChangeDetectorRef, protected select: T ) {\n    if (!select)\n      throw 'No SelectDirective specified. DatePicker must be coupled with a SelectDirective';\n\n    this.select.registerOnStateChange( () => { this.updateCalendarDays(); } );\n\n    // should we unsubscribe onDestroy since SelectDirective has\n    // same lifecycle that this component ?\n    this.select.onDateChange.subscribe( d => {\n      this.onChangeCallback(d);\n    });\n  }\n\n  /* Value accessor stuff */\n  public onTouchedCallback: () => void = () => { };\n  private onChangeCallback: (_: any) => void = () => { };\n\n  // TODO should we check that value match SelectDirective's expected value type ?\n  // If so how ?\n  // TODO use setValue() ?\n  writeValue(value: any) {\n    this.select.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  /* */\n\n  //helper\n  get value(): V {\n    return this.select.value;\n  }\n\n  set value(v: V) {\n    this.select.value = v;\n  }\n\n  protected applyLocale(date: moment.Moment): moment.Moment {\n    if(this.locale)\n      date.locale(this.locale);\n\n    return date;\n  }\n\n  /**\n   * Generate an Array of CalendarDay representing a month to display,\n   * with extra days from previous and next month to get plain weeks.\n   * @param  {number}        month\n   * @param  {number}        year\n   * @param  {boolean}       showSixWeek true if we should always returns 6 weeks,\n   * this will avoid calendar to change size depending on month displayed.\n   * @return {CalendarDay[]}             Array of CalendarDay representing a month to display\n   */\n  private generateCalendarDays(date: moment.Moment): CalendarDay[] {\n    let today = moment();\n\n    //start date\n    let itDate = this.applyLocale( date.clone() );\n    itDate.subtract( itDate.weekday(), 'd');\n\n    //end date\n    let endDate = this.applyLocale( date.clone().endOf('month') );\n    endDate.add( 6 - endDate.weekday(), 'd');\n\n    if (this.showSixWeek) {\n      let nbWeeks = endDate.diff(itDate, 'weeks');\n      if ( nbWeeks < 5 )\n        endDate.add( 5 - nbWeeks, 'weeks');\n    }\n\n    let days: CalendarDay[] = [];\n    while ( itDate.isBefore(endDate) ) {\n      days.push({\n        date: itDate.clone(),\n        state: this.select.getDateState(itDate),\n        isToday: today.isSame(itDate, 'day'),\n        isCurrDisplayMonth: itDate.month() == date.month()\n      });\n\n      itDate = itDate.add(1, 'd');\n    }\n\n    return days;\n  }\n\n  private updateCalendarDays() {\n    for (let m of this.months) {\n      let days = m.days;\n      for (let i = 0, l = days.length; i < l; i ++) {\n        let day = days[i],\n          state = this.select.getDateState(day.date);\n\n        if (day.state != state) {\n          days[i] = {\n            date: day.date,\n            isToday: day.isToday,\n            isCurrDisplayMonth: day.isCurrDisplayMonth,\n            state: state\n          };\n        }\n      }\n    }\n\n    this.cd.markForCheck();\n  }\n\n  private newMonth(date: moment.Moment): Month {\n    let monthDate = moment([date.year(), date.month()]);\n    return {\n      date: monthDate,\n      days: this.generateCalendarDays(monthDate)\n    };\n  }\n\n  initMonths(...dates: moment.Moment[]) {\n    this.months = dates.map( d => this.newMonth(d) );\n    this.cd.markForCheck();\n  }\n\n  setMonth(date: moment.Moment, idx = 0) {\n    this.months[idx] = this.newMonth(date);\n    this.cd.markForCheck();\n  }\n}\n"]}